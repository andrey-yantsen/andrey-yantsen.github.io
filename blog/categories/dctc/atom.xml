<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: dctc | Бложек сурового пэхэпэшника]]></title>
  <link href="http://andrey.janzen.su//blog/categories/dctc/atom.xml" rel="self"/>
  <link href="http://andrey.janzen.su//"/>
  <updated>2013-04-10T13:08:43+07:00</updated>
  <id>http://andrey.janzen.su//</id>
  <author>
    <name><![CDATA[Андрей Янцен]]></name>
    <email><![CDATA[andrey@janzen.su]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Реанимируем dctc для борьбы с ложными файлами]]></title>
    <link href="http://andrey.janzen.su//blog/2011/01/05/rieanimiruiem-dctc-dlia-borby-s-lozhnymi-failami/"/>
    <updated>2011-01-05T14:39:00+07:00</updated>
    <id>http://andrey.janzen.su//blog/2011/01/05/rieanimiruiem-dctc-dlia-borby-s-lozhnymi-failami</id>
    <content type="html"><![CDATA[<p>Года 4 назад у меня родилась идея - написать бота, который бы отслеживал активность в нашем локальном DC-хабе - просто логировал чат и выполнял простые команды в приват. За пару вечеров был найден прекрасный консольный клиент - <a href='http://ac2i.homelinux.com/dctc/'>dctc</a>, с которым можно взаимодействовать через unix-socket; а ещё за пару вечеров - написан простенький бот на php. При создании бота были внесены первые поправки в код dctc, чтобы он не посылал странные команды на сервер. Через некоторое время меня сделали модератором на этом самом хабе и я начал безжалостно банить. Но удобной системы для отслеживания количества банов у конкретных людей не было, но администратор каждые 5 минут генерировал информацию по текущим банам - ещё несколько убитых вечеров - и вот администрация обрела лёгкую возможность отслеживать порядковый номер бана.</p>

<p>Спустя ещё несколько месяцев в сети стали появляться фэйки - это когда, например, скачиваешь Шрэка, а там вовсе даже не Шрэк, а красная шапочка и трое непонятных мужиков... Некоторое время боролись своими силами, но душа поэта не выдержала - и я решил улучшить бота.</p>

<!-- more -->


<ol>
<li>В код dctc (v0.85.9) была добавлена обработка и хранение IP-адреса пользователя, проверка пользователя на online\offline, возможность отправки сырых команд на сервер.  Обмен файлами в современных сетях по-прежнему невозможен - клиент не дружит с TTH.</li>
<li>В бота, находящегося на стороне сервера, добавлена функция отсылки "уведомлений" пользователям - человеку в общий чат и в ЛС отправляется указанное сообщение, после чего пользователь перенаправляется на несуществующий хаб. Т.о. если человек повторно зашёл на хаб - можно с достаточной долей уверенности сказать, что человек прочитал уведомление.</li>
<li>Так же - при появлении пользователя на хабе к нему автоматически отправляются запросы на поиск нескольких самых распространённых TTH.</li>
<li>В контекстном меню файлов добавилась функция "сообщить о фейке" - при использовании которой отправляется сообщение модераторам хаба с указанием TTH файла.</li>
<li>Полностью переписан мой бот: функции для работы с DCTC вынесены в отдельный класс и этот класс расширяется функциями, специфичными для нашего хаба.</li>
<li>Скрипт поиска решено было разбить на 2 части - одна из них лишь отправляет запросы на поиск, а вторая - занимается анализом ответов на эти самые запросы.</li>
<li>Из-за того, что скрипт был внедрён спустя некоторое время, а не сразу же после возникновения проблемы - количество банов за фейки у пользователя ищется через общую таблицу банов, а не через отдельную.</li>
<li>Перед баном - пользователю отсылается уведомление о наличии у него некорректных файлов и только если такое уведомление уже отсылалось - применяется бан на период, зависящий от количества подобных нарушений.</li>
</ol>


<p>При работе всей системы используются следующие таблицы:</p>

<ul>
<li><i>bans</i>: Глобальное хранилище банов</li>
<li><i>fake_check</i>: Лог поиска фейков</li>
<li><i>fake_list</i>: Список зарегистрированных фейков</li>
<li><i>fake_names_order</i>: Списки файлов с запрещёнными и разрешёнными именами для каждого фейка</li>
<li><i>fake_bans</i>: Баны за фейки, используется только для логирования</li>
<li><i>fake_notifies</i>: Уведомления о наличии фейков, используется только для логирования</li>
<li><i>fake_counter2</i>: Количество файлов, не отнесённых ни в разрешённый, ни в запрещённый списки</li>
</ul>


<p>Архив со всеми (кажется) необходимыми файлами: <a href="http://narod.ru/disk/2770034001/dctc.tar.bz2.html">dctc.tar.bz2.html</a>.
Файлы:</p>

<ul>
<li><i>dctc.patch</i>: Патч, который нужно наложить на dctc версии 0.85.9</li>
<li><i>dctc.sh</i>: Скрипт, которым я запускаю dctc. Он так же меняет права на доступ к сокету, т.о. всё члены группы dctc смогут с ним работать.</li>
<li><i>dctcController.php</i>: Базовый класс для работы с сокетом dctc</li>
<li><i>dctcController_tech.php</i>: Класс с настройками и дополнительными функциями для нашего хаба</li>
<li><i>fakes.php</i>: Страница для управления базой фейков</li>
<li><i>reply_analizer.php</i>: Анализатор ответов поиска - ведёт различные логи, уведомляет и банит пользователей</li>
<li><i>search.php</i>: Инициирует поиск 20 произвольных фейков</li>
<li><i>tables.sql</i>: Дамп структуры таблиц</li>
</ul>


<p>Накладываем патч:
Скачиваем <a href="http://ac2i.homelinux.com/dctc/dctc-0.85.9.tar.gz">http://ac2i.homelinux.com/dctc/dctc-0.85.9.tar.gz</a>, распаковываем, командуем <code>patch -p1 -ddctc-0.85.9 &lt; dctc.patch</code>.
Основная цель патча - добавить в dctc поддержку команды <a href="http://www.teamfair.info/wiki/index.php?title=$UserIP">$UserIP</a> - дабы мы могли узнавать IP-адрес пользователя, которого хотим банить.
Самое интересное так это то, что dctc нормально работает после моего патча - c/c++ я знаю только по университетскому курсу. Всё как-то на php больше быдлокожу...</p>

<p>Компилируем, устанавливаем, запускаем dctc. Как его запускать - смотрим в dctc.sh.</p>

<p>Дальше нужно поправить класс dctcController_tech - команды на бан и уведомление у вас, скорее всего, другие. Да и hubCharset, возможно, тоже отличается.
В переменной $_socketPathFile лежит путь до файла, в котором сохраняется путь до сокета. Вот такое вот извращение.
Для ограничения частоты поиска используется shared memory - дёшево и сердито. <a href="http://ru2.php.net/manual/en/sem.installation.php">Убедитесь</a>, что ваш php это умеет.</p>

<p>Инициализируем БД и через fakes.php записываем всякие нехорошие TTH в базу.</p>

<p>Затем в фоне (или в скрине, кому как больше нравится) запускаем скрипт reply_analizer.php - он будет молча делать свои грязные делишки.</p>

<p>Дальше настраиваем периодический запуск search.php и наслаждаемся массовыми расстрелами.</p>

<p>Надеюсь кому-нибудь в чём-нибудь да поможет.</p>
]]></content>
  </entry>
  
</feed>
